@using BattleshipGame.Enums
@using BattleshipGame.Models
@using BattleshipGame.Services

@page "/"

@inject IGameEngine GameEngine

<PageTitle>Guestline - Battleship</PageTitle>

@if (_areShipsDefeated)
{
    <h4>Congrats! You've successfully destroyed all the ships!</h4>
    <h5>Restart the game?</h5>
    <button class="btn btn-primary" @onclick="@RestartGame">Restart</button>
}
else
{
    <h3>Welcome to the Battleship game!</h3>

    <NumbersRow RowCount="@Size"/>
    <Grid OnCellShoot="@CellShoot" Ships="@_ships"/>
}

@code {

    private const int Size = 10;
    
    private readonly ShipType[] _shipTypes = {
        new(Name: "Battleship", Length: 5, Quantity: 1, ShipStatus: ShipStatus.Ship),
        new(Name: "Destroyer", Length: 4, Quantity: 2, ShipStatus: ShipStatus.Ship)
    };
    
    private bool _areShipsDefeated;
    private ShipStatus[,] _ships = default!;

    protected override void OnInitialized()
    {
        InitializeShips();
    }

    private async Task CellShoot((Coordinate coordinate, ShipStatus shipStatus) cellData)
    {
        _ships[cellData.coordinate.Row, cellData.coordinate.Column] = cellData.shipStatus;
        var areAllShipsSunk = GameEngine.AreAllShipsSunk(_ships);

        if (areAllShipsSunk)
            _areShipsDefeated = true;

        await InvokeAsync(StateHasChanged);
    }

    private void RestartGame()
    {
        _areShipsDefeated = false;
        InitializeShips();
    }

    private void InitializeShips()
    {
        var initializedShips = GameEngine.InitializeGame(Size, _shipTypes);
        if (initializedShips is not null)
            _ships = initializedShips;
    }

}